from __future__ import print_function
import json
import http.client

def lambda_handler(event, context):
    print('KpsPortfolio_DoistDemo_triggerServices Lambda Function: entered. 09',event,context)
    #msgObj = json.dumps(event)
    msgObj = event
    try:
        cmd = msgObj['cmd']
        wsid = msgObj['wsid']
        wsid = str(wsid)
    except:
        statusCode = { 'statusCode': 400, 'body': json.dumps("Invalid cmd or wsid values.") }
        return(statusCode)
        
    statusCode = ""
    if cmd == "invoke services":
        postToTwist('TriggerServices Lambda function start wsid="' + wsid + '"')
        # Do processing here: read json file, post file to first component.
        postToTwist('TriggerServices Lambda function end wsid="' + wsid + '"')
        statusCode = { 'statusCode': 200, 'body': json.dumps('ok') }
    else:
        statusCode = { 'statusCode': 400, 'body': json.dumps("Invalid command: " + cmd) }  
    
    return(statusCode)
    
def postToTwist(msg):
    connection = http.client.HTTPSConnection('twist.com')
    headers = {'Content-type': 'application/json'}
    msgText = {'content': msg}
    jsonMsgText = json.dumps(msgText)
    print("jsonMsgText: " + jsonMsgText)
    connection.request('POST', '/api/v3/integration_incoming/post_data?install_id=88620&install_token=88620_b04614cadc9a080e5f31b4dbf4699974',
    jsonMsgText, headers)
    response = connection.getresponse()
    print("Twist response: " + response.read().decode())
    connection.close()
    
